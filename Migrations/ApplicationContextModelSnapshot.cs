// <auto-generated />
using HelpDesk.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace WebApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HelpDesk.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("HelpDesk.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentOrganizationId");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("CurrentOrganizationId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HelpDesk.Models.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentProjectId");

                    b.Property<string>("Description");

                    b.Property<int>("Effort");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Progress");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("State");

                    b.Property<string>("Title");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("CurrentProjectId");

                    b.HasIndex("UserID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("HelpDesk.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentOrganizationID");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.HasIndex("CurrentOrganizationID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HelpDesk.Models.UserProject", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("ProjectID");

                    b.HasKey("UserID", "ProjectID");

                    b.HasIndex("ProjectID");

                    b.ToTable("UserProject");
                });

            modelBuilder.Entity("HelpDesk.Models.Project", b =>
                {
                    b.HasOne("HelpDesk.Models.Organization", "CurrentOrganization")
                        .WithMany("Projects")
                        .HasForeignKey("CurrentOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelpDesk.Models.Task", b =>
                {
                    b.HasOne("HelpDesk.Models.Project", "CurrentProject")
                        .WithMany("Tasks")
                        .HasForeignKey("CurrentProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelpDesk.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("HelpDesk.Models.User", b =>
                {
                    b.HasOne("HelpDesk.Models.Organization", "CurrentOrganization")
                        .WithMany("Users")
                        .HasForeignKey("CurrentOrganizationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelpDesk.Models.UserProject", b =>
                {
                    b.HasOne("HelpDesk.Models.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HelpDesk.Models.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
